export interface MigrationsConfig {
  order: number;
  file: string;
  uploaded: boolean;
  canInsert: boolean;
  insertedToDB: boolean;
}

export interface Collection {
  name:
    | "clients"
    | "entries"
    | "deliveries"
    | "products"
    | "jobs"
    | "prestations"
    | "prestationDetails"
    | "users"
    | "transactions"
    | "orders";
  unit:
    | "client"
    | "entry"
    | "delivery"
    | "product"
    | "job"
    | "prestation"
    | "user"
    | "transaction"
    | "order";
  withIds: "deliveries" | "entries" | "jobs" | "orders" | "prestations";
  rows: "jobs" | "prestationDetails";
}

export interface PageArchitecture {
  title: string;
  collection?: Collection["name"];
  unit?: Collection["unit"];
  url?: string;
  table_titles: TableTitle[];
  table_data: (data: any) => any;
  search_layout?: SearchLayout[];
  create_layout?: DataLayout[];
}

export interface TableTitle {
  name: string;
  field?: string;
  isImage?: boolean;
  isBadge?: boolean;
  badgeType?: "success" | "warning" | "danger";
}

export interface DataLayout {
  group_title?: string;
  group_fields: Column[];
  findOrCreateClient?: boolean;
  rows?: boolean;
  rows_collection?: Collection["rows"];
  row_fields?: Column[][];
}

export interface SearchLayout {
  group_title?: string;
  group_fields: Column[];
}

import { HTMLInputTypeAttribute } from "react";
export interface Column {
  name: string;
  field: string;
  unique?: boolean;
  collection?: Collection["name"];
  unit?: Collection["unit"];
  value: any;
  required?: boolean;
  autogenerated?: boolean;
  type?: HTMLInputTypeAttribute;
  autocomplete?: boolean;
  dropdown?: boolean;
  textarea?: boolean;
  readonly?: boolean;
  size?: number;
  index?: boolean;
  options?: {
    name: string;
    value: string;
  }[];
}

export interface ISession {
  expires: string;
  user?: {
    email?: string;
    image?: string;
    picture?: string;
    name?: string;
    role?: "TECHNICIAN" | "RECEPTION" | "ADMIN";
  };
}

export const MAP_SAV_DB = {
  // bons de commande
  "CONTENU DE LA COMMANDE": "order_content",
  "DATE DE COMMANDE": "order_date",
  "DATE DE RECEPTION": "receipt_date",
  "NUMERO BON DE COMMANDE": "order_id",
  "NUMERO DE BON D'ENTREE DANS SAGE": "sage_entry_id",
  OBSERVATION: "observations",
  QUANTITE: "quantity",
  VIREMENT: "payment",

  // clients
  ADRESSE: "address",
  CLIENT: "name",
  "ETAT CLIENT": "status",
  OBS: "observations",
  "PERSONNE DE CONTACT": "contact",
  "REV OU PART": "type",
  TEL: "phone_number",
  WILAYA: "wilaya",

  // bons de livraison
  "DATE DE LIVRAISON": "date_delivered",
  "CONTENU LIVRAISON": "delivery_content",
  "DATE LIVRAISON": "delivery_date",
  "NUMERO BL": "delivery_id",
  "NUMERO DU BON DE RETOUR": "entry_id",
  "NUMERO DU BON DE SORTIE SACOMI": "sage_exit_id",
  // 'CLIENT':					'client_name',
  // 'OBS'		:			'observations',

  // entrees
  "bon de garantie": "warranty",
  Client: "client_name",
  Date_entree: "entry_date",
  global: "global",
  "heure d'entree": "entry_time",
  No_bon: "entry_id",
  // 'OBS'			:		'observations',

  // prestations
  "A FACTURER": "to_bill",
  "DATE DE RECUP": "recovery_date",
  "DATE ENCAISSEMENT": "payment_date",
  "DATE PREST": "prestation_date",
  FACTURE: "invoice",
  "NUMERO PREST": "prestation_id",
  PAYEE: "is_paid",
  REVENDEUR: "client_type",
  "DETAIL PREST::TOTAL": "total_amount",
  // 'OBS'					:'observations',
  // 'CLIENT'			:		'client_name',

  // prestation details
  "mode de payement": "payment_method",
  "CLIENT::BLOCAGE": "client_blocked",
  "CLIENT::ETAT CLIENT": "client_status",
  "CLIENT::OBS": "client_observations",
  "CLIENT::REV OU PART": "client_type",
  "CLIENT::TEL": "client_phone_number",
  "CLIENT::WILAYA": "client_wilaya",
  "DETAIL PREST::DATE PREST": "prestation_date",
  "DETAIL PREST::DESIGNATION": "designation",
  "DETAIL PREST::PRIX HT": "price_ht",
  "DETAIL PREST::PRIX TTC": "price_ttc",
  "DETAIL PREST::QTE": "quantity",
  "DETAIL PREST::SOUS TOTAL": "subtotal",
  // "A FACTURER":				'to_bill',
  // 'CLIENT':					'client_name',
  // "DATE ENCAISSEMENT"		:	'payment_date',
  // 'FACTURE'				:	'invoice',
  // "NUMERO PREST"		:		'prestation_id',
  // 'PAYEE'			:		'is_paid',
  // 'OBS'			:		'observations',
  // "DETAIL PREST::TOTAL"	:		'total_amount',

  // jobs
  "ATTENTE REPARATION": "awaiting_intervention",
  date_entree: "entry_date",
  Daterepare: "repaired_date",
  Datremiseclient: "exit_date",
  Désignation: "designation",
  diagnostiq: "diagnostics",
  Etat_suit_INTERV: "status",
  LOCALISATION: "localisation",
  Marque: "product_brand",
  "même modele": "product_same_model",
  MODEL: "product_model",
  No_serie: "serial_number",
  "nouveau N°S": "new_serial_number",
  "NUMERO DE PREST": "prestation_id",
  "NUMERO PRODUIT DANS LE BON": "entry_subid",
  "PIECE INSTALLEE SORTIE DE STOCK": "used_parts",
  "piece detachée": "spare_parts",
  "RMA ASUS": "rma_asus",
  technicien: "technician",
  Type: "product_type",
  "Entree::Client": "client_name",
  "Entree::No_bon": "entry_id",
  // "bon de garantie": "warranty",
  // "CLIENT::ETAT CLIENT"		:	'client_status',
  // "CLIENT::REV OU PART"	:		'client_type',
};
